<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
<!-- 
		View를 처리하는 역할 
		컨트롤러가 반환하는 ModelAndView or String 의 
		viewName이 ok 이면 /views/ok.jsp로 응답시킨다 
 -->


<context:component-scan base-package="org.kosta" />
<!-- annotation 기반 springmvc 설정  
기본적으로 RequestMapping, ModelAttribute, SessionAttribute, RequestParam 등
MVC에서 사용되는 Annotation 사용을 위해 mvc:annotation-driven을 사용
-->
<mvc:annotation-driven />
<!--  dbcp -->
<bean id="dbcp" class="org.apache.commons.dbcp2.BasicDataSource">
	<property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
	<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe" />
	<property name="username" value="scott"/>
	<property name="password" value="tiger"/>
</bean>
<!-- Spring과 MyBatis 연동설정
	  dbcp 를 할당
	  MyBatis Mapper xml (sql 정의한 파일) 의 위치를 할당 
	  org.kosta.model.vo 패키지에 있는 클래스를 찾아서 모두 소문자로 변환해준다. (가독성을 위해)
	  underscore 와 camelCase 즉 
	  컬럼명과     인스턴스변수명이 자동 매핑되도록 설정 
	  ex)  product_id  와 productId 가 동일하도록 인식시킨다. 
 -->
<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dbcp"/>
	<property name="mapperLocations" value="classpath:/mybatis/config/*.xml"/>
	<property name="typeAliasesPackage" value="org.kosta.model.vo"/>
	<property name="configuration">
		<bean class="org.apache.ibatis.session.Configuration">
			<property name="mapUnderscoreToCamelCase" value="true"/>
		</bean>
	</property>
</bean>
<!-- Spring Application 에서 MyBatis를 효과적으로 사용하기 위한 객체

	  선언적 방식의 트랜잭션 처리를 지원한다 
	  ( AOP 기반 트랜잭션 처리 - 이후 공부예정 ) 
 -->
 <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
 	<constructor-arg ref="sqlSessionFactoryBean"/>
 </bean>	
</beans>












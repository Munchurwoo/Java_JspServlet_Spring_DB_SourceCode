<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- org.kosta 하위 팩키지의 클래스들을 탐색해서 @Component 계열 어노테이션 ( @Repository , @Service 
		, @Controller .. ) 명시된 클래스를 이용해 객체 생성하고 Dependency Injection 계열 어노테이션에 대한 
		처리 ( @Autowired : 일치하는 타입의 객체를 주입 @Resource : 일치하는 타입의 객체를 주입 @Resource(name="bean 
		id") : 명시한 bean id 객체를 주입 어노테이션으로 생성한 객체는 bean id가 자동으로 소문자로 시작하는 클래스명이 된다. 
		) -->
	<context:component-scan base-package="org.kosta" />
	<!-- annotation 기반 springmvc 설정 기본적으로 RequestMapping, ModelAttribute, SessionAttribute, 
		RequestParam 등 MVC에서 사용되는 Annotation 사용을 위해 mvc:annotation-driven을 사용 -->
	<mvc:annotation-driven />
</beans>
